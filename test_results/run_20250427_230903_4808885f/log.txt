2025-04-27 23:09:03,785 - __main__ - INFO - Logging detailed output to: /Users/saadahmed/Desktop/Apps/BussGPT/scripts/agent_tests/../../test_results/run_20250427_230903_4808885f/log.txt
2025-04-27 23:09:03,785 - __main__ - INFO - Starting agent test run for query: 'What was Microsoft's cloud strategy in Q3 2020?'
2025-04-27 23:09:03,785 - __main__ - INFO - --- Attempting to get API key from environment... ---
2025-04-27 23:09:03,785 - __main__ - INFO - --- ANTHROPIC_API_KEY loaded successfully. ---
2025-04-27 23:09:03,785 - langchain_tools.logger - INFO - Initialized AgentLogger for agent HierarchicalAgent_v3_Refactored, conversation fac230f3-a5b2-47b3-a1c8-79c0ca225574
2025-04-27 23:09:03,785 - langchain_tools.agent - DEBUG - Initializing LLM
2025-04-27 23:09:03,785 - langchain_tools.agent - DEBUG - Initializing LLM
2025-04-27 23:09:03,785 - langchain_tools.tool_factory - INFO - Initializing ChatAnthropic with model: claude-3-5-sonnet-20240620
2025-04-27 23:09:03,786 - langchain_tools.agent - DEBUG - ChatAnthropic instance created successfully via factory
2025-04-27 23:09:03,786 - langchain_tools.agent - INFO - LLM initialized successfully
2025-04-27 23:09:03,786 - langchain_tools.agent - DEBUG - Initializing tools for Master Agent
2025-04-27 23:09:03,786 - langchain_tools.tool_factory - INFO - [Financial Tool] Connecting to SQL Database: /Users/saadahmed/Desktop/Apps/BussGPT/scripts/data/financial_data.db
2025-04-27 23:09:03,806 - langchain_tools.tool_factory - INFO - [Financial Tool] SQLDatabase connection successful. Tables: ['companies', 'daily_stock_prices', 'dividends', 'quarterly_balance_sheet', 'quarterly_income_statement', 'stock_splits']
2025-04-27 23:09:03,809 - langchain_tools.tool_factory - INFO - [Financial Tool] Generated DB Metadata Hints for LLM.
2025-04-27 23:09:03,809 - langchain_tools.tool_factory - INFO - [Financial Tool] SQLDatabaseChain created successfully.
2025-04-27 23:09:03,809 - langchain_tools.tool_factory - INFO - [CCR Tool] Connecting to SQL Database: /Users/saadahmed/Desktop/Apps/BussGPT/scripts/data/ccr_reporting.db
2025-04-27 23:09:03,815 - langchain_tools.tool_factory - INFO - [CCR Tool] SQLDatabase connection successful. Tables: ['limits', 'products', 'report_counterparties', 'report_daily_exposures', 'securities', 'transit_mapping']
2025-04-27 23:09:03,816 - langchain_tools.tool_factory - WARNING - [CCR Tool] Error getting metadata hints: no such column: product_type
2025-04-27 23:09:03,816 - langchain_tools.tool_factory - INFO - [CCR Tool] Generated DB Metadata Hints for LLM.
2025-04-27 23:09:03,816 - langchain_tools.tool_factory - INFO - [CCR Tool] SQLDatabaseChain created successfully.
2025-04-27 23:09:03,816 - langchain_tools.tool_factory - INFO - [Transcript Agent Tool] Initializing...
2025-04-27 23:09:03,816 - langchain_tools.tool4_metadata_lookup - INFO - Metadata Tool: Creating tool instance.
2025-04-27 23:09:03,816 - langchain_tools.tool_factory - INFO - [Transcript Agent Tool] Internal tools created: ['category_tool', 'metadata_lookup_tool', 'document_content_analysis_tool']
2025-04-27 23:09:03,816 - langchain_tools.tool_factory - DEBUG - [Transcript Agent Tool] Prompt template created.
2025-04-27 23:09:03,817 - langchain_tools.tool_factory - DEBUG - [Transcript Agent Tool] Internal ReAct agent created.
2025-04-27 23:09:03,817 - langchain_tools.tool_factory - INFO - [Transcript Agent Tool] Internal AgentExecutor created.
2025-04-27 23:09:03,818 - langchain_tools.tool_factory - INFO - [Transcript Agent Tool] Tool object created successfully.
2025-04-27 23:09:03,818 - langchain_tools.agent_config - INFO - --- Starting dynamic tool description generation... ---
2025-04-27 23:09:03,818 - langchain_tools.agent_config - INFO - --- Attempting to fetch DB examples for: financial_data.db ---
2025-04-27 23:09:03,818 - langchain_tools.agent_config - DEBUG - Tried DB path (not found): /Users/saadahmed/Desktop/Apps/BussGPT/financial_data.db
2025-04-27 23:09:03,818 - langchain_tools.agent_config - DEBUG - Tried DB path (not found): /Users/saadahmed/Desktop/Apps/BussGPT/data/financial_data.db
2025-04-27 23:09:03,818 - langchain_tools.agent_config - INFO - Using DB path: /Users/saadahmed/Desktop/Apps/BussGPT/scripts/data/financial_data.db
2025-04-27 23:09:03,818 - langchain_tools.agent_config - INFO - --- Connecting to DB at: /Users/saadahmed/Desktop/Apps/BussGPT/scripts/data/financial_data.db ---
2025-04-27 23:09:03,818 - langchain_tools.agent_config - INFO - --- Executing query: SELECT DISTINCT ticker FROM daily_stock_prices WHERE ticker IS NOT NULL ORDER BY ticker LIMIT 3 on financial_data.db ---
2025-04-27 23:09:03,819 - langchain_tools.agent_config - INFO - --- Successfully fetched 3 examples from financial_data.db ---
2025-04-27 23:09:03,819 - langchain_tools.agent_config - INFO - --- Closing DB connection for: /Users/saadahmed/Desktop/Apps/BussGPT/scripts/data/financial_data.db ---
2025-04-27 23:09:03,819 - langchain_tools.agent_config - INFO - --- Finished fetching DB examples for: financial_data.db ---
2025-04-27 23:09:03,819 - langchain_tools.agent_config - INFO - --- Attempting to fetch DB examples for: ccr_reporting.db ---
2025-04-27 23:09:03,819 - langchain_tools.agent_config - INFO - Using DB path: /Users/saadahmed/Desktop/Apps/BussGPT/ccr_reporting.db
2025-04-27 23:09:03,819 - langchain_tools.agent_config - INFO - --- Connecting to DB at: /Users/saadahmed/Desktop/Apps/BussGPT/ccr_reporting.db ---
2025-04-27 23:09:03,819 - langchain_tools.agent_config - INFO - --- Executing query: SELECT DISTINCT short_name FROM report_counterparties WHERE short_name IS NOT NULL ORDER BY short_name LIMIT 3 on ccr_reporting.db ---
2025-04-27 23:09:03,819 - langchain_tools.agent_config - ERROR - --- SQLITE ERROR fetching examples from ccr_reporting.db: no such table: report_counterparties ---
Traceback (most recent call last):
  File "/Users/saadahmed/Desktop/Apps/BussGPT/langchain_tools/agent_config.py", line 80, in _fetch_db_examples
    cursor.execute(query) # Query already includes LIMIT
    ~~~~~~~~~~~~~~^^^^^^^
sqlite3.OperationalError: no such table: report_counterparties
2025-04-27 23:09:03,819 - langchain_tools.agent_config - INFO - --- Closing DB connection for: /Users/saadahmed/Desktop/Apps/BussGPT/ccr_reporting.db ---
2025-04-27 23:09:03,820 - langchain_tools.agent_config - INFO - --- Finished fetching DB examples for: ccr_reporting.db ---
2025-04-27 23:09:03,820 - langchain_tools.agent_config - INFO - --- Finished fetching all DB examples. ---
2025-04-27 23:09:03,820 - langchain_tools.agent - DEBUG - Loaded Tool: financial_sql_query_tool with description: Queries the `financial_data.db` database containing structured financial market data. Use this for specific questions about **historical (2016-2020) daily stock prices** (OHLC), **historical quarterly financials** (income/balance sheet, limited dates), **dividends**, or **stock splits** for known public companies like **'AAPL', 'AMD', 'AMZN'**, etc. Input is a natural language question about specific historical data points. Persona: SQL Database Expert (Historical Financial Data).
2025-04-27 23:09:03,820 - langchain_tools.agent - DEBUG - Loaded Tool: ccr_sql_query_tool with description: Queries the `ccr_reporting.db` database containing structured Counterparty Credit Risk (CCR) reporting data (sample data). Use this for specific questions about **counterparty details (ratings, country)**, **daily risk exposures** (Net MTM, Gross, PFE, Settlement), **risk limits**, **limit utilization**, **breach status**, or individual **trade details** related to counterparties like **'JPMorgan', 'BankOfAmerica', 'Citigroup'**, etc. Input is a natural language question about specific CCR metrics or counterparty/trade details within this database. Persona: SQL Database Expert (CCR Reporting Data).
2025-04-27 23:09:03,820 - langchain_tools.agent - DEBUG - Loaded Tool: transcript_search_summary_tool with description: Answers questions requiring qualitative analysis, summaries, or context from **earnings call transcripts**. Use for queries about company performance narratives, strategies, management commentary, outlook, or specific events discussed in calls (e.g., queries like **'What was management's outlook for cloud growth in the MSFT Q4 2020 call?'**). Input should be the original user query. Persona: Equity Research Analyst (Transcript Specialist).
2025-04-27 23:09:03,820 - langchain_tools.agent - DEBUG - Loaded Tool: financial_news_search with description: Searches the web for **current or recent** financial news, market sentiment, **live stock price estimates**, or general information about companies, markets, or economic events. To focus results on reliable financial sources, preferentially construct the search term using the 'site:' operator. For example: 'query site:reuters.com OR site:marketwatch.com OR site:finance.yahoo.com OR site:seekingalpha.com'. Use this for information **not** found in the historical financial database or the CCR reporting database.
2025-04-27 23:09:03,820 - langchain_tools.agent - INFO - Master Agent tools initialized successfully
2025-04-27 23:09:03,820 - langchain_tools.agent - INFO - Master Agent initialized with tools: ['financial_sql_query_tool', 'ccr_sql_query_tool', 'transcript_search_summary_tool', 'financial_news_search']
2025-04-27 23:09:03,820 - langchain_tools.orchestrator - INFO - Orchestrator initialized with tools: ['financial_sql_query_tool', 'ccr_sql_query_tool', 'transcript_search_summary_tool', 'financial_news_search']
2025-04-27 23:09:03,820 - langchain_tools.agent - INFO - Orchestrator initialized
2025-04-27 23:09:03,820 - langchain_tools.agent - DEBUG - Initializing Master Agent executor
2025-04-27 23:09:03,821 - langchain_tools.agent - INFO - Master Agent executor initialized successfully
2025-04-27 23:09:03,821 - __main__ - INFO - 
Running through agent: What was Microsoft's cloud strategy in Q3 2020?
2025-04-27 23:09:03,821 - langchain_tools.state_manager - INFO - Agent state reset.
2025-04-27 23:09:03,821 - langchain_tools.logger - INFO - {"timestamp": "2025-04-28T03:09:03.821169", "level": "INFO", "event_type": "query_start", "agent_id": "HierarchicalAgent_v3_Refactored", "conversation_id": "4bea0daa-bc68-4418-9e2e-8c3e7a44d128", "query": "What was Microsoft's cloud strategy in Q3 2020?"}
2025-04-27 23:09:04,914 - httpx - INFO - HTTP Request: POST https://api.anthropic.com/v1/messages "HTTP/1.1 200 OK"
2025-04-27 23:09:07,095 - langchain_tools.tool_factory - INFO - [Transcript Agent Tool] Invoking sub-agent for query: What was Microsoft's cloud strategy in Q3 2020?
...
2025-04-27 23:09:08,746 - httpx - INFO - HTTP Request: POST https://api.anthropic.com/v1/messages "HTTP/1.1 200 OK"
2025-04-27 23:09:09,819 - langchain_tools.tool4_metadata_lookup - INFO - Metadata Tool: Received query: 'Microsoft cloud strategy Q3 2020
...'
2025-04-27 23:09:09,829 - langchain_tools.tool4_metadata_lookup - INFO - Metadata Tool: MongoDB connection successful.
2025-04-27 23:09:09,829 - langchain_tools.tool4_metadata_lookup - INFO - Metadata Tool: Fetching all metadata...
2025-04-27 23:09:09,832 - langchain_tools.tool4_metadata_lookup - INFO - Metadata Tool: Fetched details for 188 documents across 10 categories.
2025-04-27 23:09:09,833 - langchain_tools.tool4_metadata_lookup - INFO - Metadata Tool: Found 167 documents with individual summaries.
2025-04-27 23:09:09,834 - langchain_tools.tool4_metadata_lookup - INFO - Metadata Tool: Found 6 categories with synthesized summaries.
2025-04-27 23:09:09,835 - langchain_tools.tool4_metadata_lookup - WARNING - Metadata Tool: Metadata context length (46490) exceeds limit (20000). Simple truncation applied (may break JSON). Consider reducing data passed.
2025-04-27 23:09:09,835 - langchain_tools.tool4_metadata_lookup - INFO - Metadata Tool: Sending request to LLM...
2025-04-27 23:09:12,229 - httpx - INFO - HTTP Request: POST https://api.anthropic.com/v1/messages "HTTP/1.1 200 OK"
2025-04-27 23:09:12,234 - langchain_tools.tool4_metadata_lookup - DEBUG - Metadata Tool: Raw LLM output received: '```json\n{\n  "relevant_category_id": null,\n  "relevant_doc_ids": [],\n  "category_summary_available": false,\n  "doc_ids_with_summaries": []\n}\n```'
2025-04-27 23:09:12,234 - langchain_tools.config - DEBUG - Sanitizing JSON input (first 100 chars): '```json\n{\n  "relevant_category_id": null,\n  "relevant_doc_ids": [],\n  "category_summary_available": '
2025-04-27 23:09:12,234 - langchain_tools.config - ERROR - JSON parsing failed even after basic sanitization: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)
2025-04-27 23:09:12,234 - langchain_tools.config - DEBUG - Problematic JSON string after basic sanitization (first 200 chars): '{\\n  \\"relevant_category_id\\": null,\\n  \\"relevant_doc_ids\\": [],\\n  \\"category_summary_available\\": false,\\n  \\"doc_ids_with_summaries\\": []\\n}'
2025-04-27 23:09:12,234 - langchain_tools.tool4_metadata_lookup - ERROR - Metadata Tool: Unexpected error parsing JSON response: Failed to parse sanitized JSON. Error: Expecting property name enclosed in double quotes: line 1 column 2 (char 1). String: {
  "relevant_category_id": null,
  "relevant_doc_ids": [],
  "category_summary_available": false,
  "doc_ids_with_summaries": []
}...
Raw response: ```json
{
  "relevant_category_id": null,
  "relevant_doc_ids": [],
  "category_summary_available": false,
  "doc_ids_with_summaries": []
}
```
Traceback (most recent call last):
  File "/Users/saadahmed/Desktop/Apps/BussGPT/langchain_tools/config.py", line 198, in sanitize_json_response
    json.loads(fixed_json_str)
    ~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/__init__.py", line 346, in loads
    return _default_decoder.decode(s)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/decoder.py", line 345, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
               ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.2/Frameworks/Python.framework/Versions/3.13/lib/python3.13/json/decoder.py", line 361, in raw_decode
    obj, end = self.scan_once(s, idx)
               ~~~~~~~~~~~~~~^^^^^^^^
json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/saadahmed/Desktop/Apps/BussGPT/langchain_tools/tool4_metadata_lookup.py", line 271, in llm_metadata_lookup
    parsed_json = json.loads(sanitize_json_response(raw_llm_output))
                             ~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/Users/saadahmed/Desktop/Apps/BussGPT/langchain_tools/config.py", line 207, in sanitize_json_response
    raise ValueError(f"Failed to parse sanitized JSON. Error: {e}. String: {json_str[:200]}...")
ValueError: Failed to parse sanitized JSON. Error: Expecting property name enclosed in double quotes: line 1 column 2 (char 1). String: {
  "relevant_category_id": null,
  "relevant_doc_ids": [],
  "category_summary_available": false,
  "doc_ids_with_summaries": []
}...
