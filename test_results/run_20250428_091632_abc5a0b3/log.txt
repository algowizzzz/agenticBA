2025-04-28 09:16:32,074 - __main__ - INFO - Logging detailed output to: /Users/saadahmed/Desktop/Apps/BussGPT/scripts/agent_tests/../../test_results/run_20250428_091632_abc5a0b3/log.txt
2025-04-28 09:16:32,074 - __main__ - INFO - Starting agent test run for query: 'What was Microsoft's cloud strategy in Q3 2020?'
2025-04-28 09:16:32,074 - __main__ - INFO - --- Attempting to get API key from environment... ---
2025-04-28 09:16:32,074 - __main__ - INFO - --- ANTHROPIC_API_KEY loaded successfully. ---
2025-04-28 09:16:32,074 - langchain_tools.logger - INFO - Initialized AgentLogger for agent HierarchicalAgent_v3_Refactored, conversation e3c9716d-17d3-4493-a07b-e639ccfeda96
2025-04-28 09:16:32,074 - langchain_tools.agent - DEBUG - Initializing LLM
2025-04-28 09:16:32,074 - langchain_tools.agent - DEBUG - Initializing LLM
2025-04-28 09:16:32,074 - langchain_tools.tool_factory - INFO - Initializing ChatAnthropic with model: claude-3-5-sonnet-20240620
2025-04-28 09:16:32,075 - langchain_tools.agent - DEBUG - ChatAnthropic instance created successfully via factory
2025-04-28 09:16:32,075 - langchain_tools.agent - INFO - LLM initialized successfully
2025-04-28 09:16:32,075 - langchain_tools.agent - DEBUG - Initializing tools for Master Agent
2025-04-28 09:16:32,075 - langchain_tools.tool_factory - INFO - [Financial Tool] Connecting to SQL Database: /Users/saadahmed/Desktop/Apps/BussGPT/scripts/data/financial_data.db
2025-04-28 09:16:32,095 - langchain_tools.tool_factory - INFO - [Financial Tool] SQLDatabase connection successful. Tables: ['companies', 'daily_stock_prices', 'dividends', 'quarterly_balance_sheet', 'quarterly_income_statement', 'stock_splits']
2025-04-28 09:16:32,099 - langchain_tools.tool_factory - INFO - [Financial Tool] Generated DB Metadata Hints for LLM.
2025-04-28 09:16:32,099 - langchain_tools.tool_factory - INFO - [Financial Tool] SQLDatabaseChain created successfully.
2025-04-28 09:16:32,100 - langchain_tools.tool_factory - INFO - [CCR Tool] Connecting to SQL Database: /Users/saadahmed/Desktop/Apps/BussGPT/scripts/data/ccr_reporting.db
2025-04-28 09:16:32,107 - langchain_tools.tool_factory - INFO - [CCR Tool] SQLDatabase connection successful. Tables: ['limits', 'products', 'report_counterparties', 'report_daily_exposures', 'securities', 'transit_mapping']
2025-04-28 09:16:32,108 - langchain_tools.tool_factory - WARNING - [CCR Tool] Error getting metadata hints: no such column: product_type
2025-04-28 09:16:32,109 - langchain_tools.tool_factory - INFO - [CCR Tool] Generated DB Metadata Hints for LLM.
2025-04-28 09:16:32,109 - langchain_tools.tool_factory - INFO - [CCR Tool] SQLDatabaseChain created successfully.
2025-04-28 09:16:32,109 - langchain_tools.tool_factory - INFO - [Transcript Agent Tool] Initializing...
2025-04-28 09:16:32,109 - langchain_tools.tool4_metadata_lookup - INFO - Metadata Tool: Creating tool instance.
2025-04-28 09:16:32,109 - langchain_tools.tool_factory - INFO - [Transcript Agent Tool] Internal tools created: ['category_tool', 'metadata_lookup_tool', 'document_content_analysis_tool']
2025-04-28 09:16:32,109 - langchain_tools.agent_config - INFO - --- Starting dynamic tool description generation... ---
2025-04-28 09:16:32,110 - langchain_tools.agent_config - INFO - --- Attempting to fetch DB examples for: financial_data.db ---
2025-04-28 09:16:32,110 - langchain_tools.agent_config - DEBUG - Tried DB path (not found): /Users/saadahmed/Desktop/Apps/BussGPT/financial_data.db
2025-04-28 09:16:32,110 - langchain_tools.agent_config - DEBUG - Tried DB path (not found): /Users/saadahmed/Desktop/Apps/BussGPT/data/financial_data.db
2025-04-28 09:16:32,110 - langchain_tools.agent_config - INFO - Using DB path: /Users/saadahmed/Desktop/Apps/BussGPT/scripts/data/financial_data.db
2025-04-28 09:16:32,110 - langchain_tools.agent_config - INFO - --- Connecting to DB at: /Users/saadahmed/Desktop/Apps/BussGPT/scripts/data/financial_data.db ---
2025-04-28 09:16:32,110 - langchain_tools.agent_config - INFO - --- Executing query: SELECT DISTINCT ticker FROM daily_stock_prices WHERE ticker IS NOT NULL ORDER BY ticker LIMIT 3 on financial_data.db ---
2025-04-28 09:16:32,111 - langchain_tools.agent_config - INFO - --- Successfully fetched 3 examples from financial_data.db ---
2025-04-28 09:16:32,111 - langchain_tools.agent_config - INFO - --- Closing DB connection for: /Users/saadahmed/Desktop/Apps/BussGPT/scripts/data/financial_data.db ---
2025-04-28 09:16:32,112 - langchain_tools.agent_config - INFO - --- Finished fetching DB examples for: financial_data.db ---
2025-04-28 09:16:32,112 - langchain_tools.agent_config - INFO - --- Attempting to fetch DB examples for: ccr_reporting.db ---
2025-04-28 09:16:32,112 - langchain_tools.agent_config - INFO - Using DB path: /Users/saadahmed/Desktop/Apps/BussGPT/ccr_reporting.db
2025-04-28 09:16:32,112 - langchain_tools.agent_config - INFO - --- Connecting to DB at: /Users/saadahmed/Desktop/Apps/BussGPT/ccr_reporting.db ---
2025-04-28 09:16:32,112 - langchain_tools.agent_config - INFO - --- Executing query: SELECT DISTINCT short_name FROM report_counterparties WHERE short_name IS NOT NULL ORDER BY short_name LIMIT 3 on ccr_reporting.db ---
2025-04-28 09:16:32,112 - langchain_tools.agent_config - ERROR - --- SQLITE ERROR fetching examples from ccr_reporting.db: no such table: report_counterparties ---
Traceback (most recent call last):
  File "/Users/saadahmed/Desktop/Apps/BussGPT/langchain_tools/agent_config.py", line 80, in _fetch_db_examples
    cursor.execute(query) # Query already includes LIMIT
    ~~~~~~~~~~~~~~^^^^^^^
sqlite3.OperationalError: no such table: report_counterparties
2025-04-28 09:16:32,113 - langchain_tools.agent_config - INFO - --- Closing DB connection for: /Users/saadahmed/Desktop/Apps/BussGPT/ccr_reporting.db ---
2025-04-28 09:16:32,113 - langchain_tools.agent_config - INFO - --- Finished fetching DB examples for: ccr_reporting.db ---
2025-04-28 09:16:32,113 - langchain_tools.agent_config - INFO - --- Finished fetching all DB examples. ---
2025-04-28 09:16:32,113 - langchain_tools.agent - DEBUG - Loaded Tool: financial_sql_query_tool with description: Queries the `financial_data.db` database containing structured financial market data. Use this for specific questions about **historical (2016-2020) daily stock prices** (OHLC), **historical quarterly financials** (income/balance sheet, limited dates), **dividends**, or **stock splits** for known public companies like **'AAPL', 'AMD', 'AMZN'**, etc. Input is a natural language question about specific historical data points. Persona: SQL Database Expert (Historical Financial Data).
2025-04-28 09:16:32,113 - langchain_tools.agent - DEBUG - Loaded Tool: ccr_sql_query_tool with description: Queries the `ccr_reporting.db` database containing structured Counterparty Credit Risk (CCR) reporting data (sample data). Use this for specific questions about **counterparty details (ratings, country)**, **daily risk exposures** (Net MTM, Gross, PFE, Settlement), **risk limits**, **limit utilization**, **breach status**, or individual **trade details** related to counterparties like **'JPMorgan', 'BankOfAmerica', 'Citigroup'**, etc. Input is a natural language question about specific CCR metrics or counterparty/trade details within this database. Persona: SQL Database Expert (CCR Reporting Data).
2025-04-28 09:16:32,113 - langchain_tools.agent - DEBUG - Loaded Tool: transcript_search_summary_tool with description: Answers questions requiring qualitative analysis, summaries, or context from **earnings call transcripts**. Use for queries about company performance narratives, strategies, management commentary, outlook, or specific events discussed in calls (e.g., queries like **'What was management's outlook for cloud growth in the MSFT Q4 2020 call?'**). Input should be the original user query. Persona: Equity Research Analyst (Transcript Specialist).
2025-04-28 09:16:32,113 - langchain_tools.agent - DEBUG - Loaded Tool: financial_news_search with description: Searches the web for **current or recent** financial news, market sentiment, **live stock price estimates**, or general information about companies, markets, or economic events. To focus results on reliable financial sources, preferentially construct the search term using the 'site:' operator. For example: 'query site:reuters.com OR site:marketwatch.com OR site:finance.yahoo.com OR site:seekingalpha.com'. Use this for information **not** found in the historical financial database or the CCR reporting database.
2025-04-28 09:16:32,113 - langchain_tools.agent - INFO - Master Agent tools initialized successfully
2025-04-28 09:16:32,113 - langchain_tools.agent - INFO - Master Agent initialized with tools: ['financial_sql_query_tool', 'ccr_sql_query_tool', 'transcript_agent', 'financial_news_search']
2025-04-28 09:16:32,113 - langchain_tools.orchestrator - INFO - Orchestrator initialized with tools: ['financial_sql_query_tool', 'ccr_sql_query_tool', 'transcript_search_summary_tool', 'financial_news_search']
2025-04-28 09:16:32,114 - langchain_tools.agent - INFO - Orchestrator initialized
2025-04-28 09:16:32,114 - langchain_tools.agent - DEBUG - Initializing Master Agent executor
2025-04-28 09:16:32,115 - langchain_tools.agent - INFO - Master Agent executor initialized successfully
2025-04-28 09:16:32,115 - __main__ - INFO - 
Running through agent: What was Microsoft's cloud strategy in Q3 2020?
2025-04-28 09:16:32,115 - langchain_tools.state_manager - INFO - Agent state reset.
2025-04-28 09:16:32,116 - langchain_tools.logger - INFO - {"timestamp": "2025-04-28T13:16:32.116021", "level": "INFO", "event_type": "query_start", "agent_id": "HierarchicalAgent_v3_Refactored", "conversation_id": "9c6e6564-ec87-4e5a-9ed5-4a8a534d41f6", "query": "What was Microsoft's cloud strategy in Q3 2020?"}
2025-04-28 09:16:33,173 - httpx - INFO - HTTP Request: POST https://api.anthropic.com/v1/messages "HTTP/1.1 200 OK"
2025-04-28 09:16:35,385 - langchain_tools.agent - ERROR - Unhandled exception during agent execution: create_react_agent() got an unexpected keyword argument 'verbose'
Traceback (most recent call last):
  File "/Users/saadahmed/Desktop/Apps/BussGPT/langchain_tools/agent.py", line 277, in query
    final_outcome = self.agent_executor.invoke(inputs)
  File "/Users/saadahmed/Desktop/Apps/BussGPT/venv/lib/python3.13/site-packages/langchain/chains/base.py", line 167, in invoke
    raise e
  File "/Users/saadahmed/Desktop/Apps/BussGPT/venv/lib/python3.13/site-packages/langchain/chains/base.py", line 157, in invoke
    self._call(inputs, run_manager=run_manager)
    ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/saadahmed/Desktop/Apps/BussGPT/venv/lib/python3.13/site-packages/langchain/agents/agent.py", line 1620, in _call
    next_step_output = self._take_next_step(
        name_to_tool_map,
    ...<3 lines>...
        run_manager=run_manager,
    )
  File "/Users/saadahmed/Desktop/Apps/BussGPT/venv/lib/python3.13/site-packages/langchain/agents/agent.py", line 1328, in _take_next_step
    for a in self._iter_next_step(
             ~~~~~~~~~~~~~~~~~~~~^
        name_to_tool_map,
        ^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        run_manager,
        ^^^^^^^^^^^^
    )
    ^
  File "/Users/saadahmed/Desktop/Apps/BussGPT/venv/lib/python3.13/site-packages/langchain/agents/agent.py", line 1411, in _iter_next_step
    yield self._perform_agent_action(
          ~~~~~~~~~~~~~~~~~~~~~~~~~~^
        name_to_tool_map, color_mapping, agent_action, run_manager
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/saadahmed/Desktop/Apps/BussGPT/venv/lib/python3.13/site-packages/langchain/agents/agent.py", line 1433, in _perform_agent_action
    observation = tool.run(
        agent_action.tool_input,
    ...<3 lines>...
        **tool_run_kwargs,
    )
  File "/Users/saadahmed/Desktop/Apps/BussGPT/venv/lib/python3.13/site-packages/langchain_core/tools/base.py", line 774, in run
    raise error_to_raise
  File "/Users/saadahmed/Desktop/Apps/BussGPT/venv/lib/python3.13/site-packages/langchain_core/tools/base.py", line 743, in run
    response = context.run(self._run, *tool_args, **tool_kwargs)
  File "/Users/saadahmed/Desktop/Apps/BussGPT/venv/lib/python3.13/site-packages/langchain_core/tools/simple.py", line 105, in _run
    return self.func(*args, **kwargs)
           ~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "/Users/saadahmed/Desktop/Apps/BussGPT/langchain_tools/tool_factory.py", line 725, in <lambda>
    func=lambda q: create_react_agent(
                   ~~~~~~~~~~~~~~~~~~^
        llm,
        ^^^^
    ...<2 lines>...
        verbose=True
        ^^^^^^^^^^^^
    )(q),
    ^
TypeError: create_react_agent() got an unexpected keyword argument 'verbose'
2025-04-28 09:16:35,393 - langchain_tools.logger - ERROR - {"timestamp": "2025-04-28T13:16:35.393725", "level": "ERROR", "event_type": "query_end", "agent_id": "HierarchicalAgent_v3_Refactored", "conversation_id": "9c6e6564-ec87-4e5a-9ed5-4a8a534d41f6", "final_response": {"status": "error", "result": "Agent execution failed with error: create_react_agent() got an unexpected keyword argument 'verbose'", "error": "Agent execution failed: create_react_agent() got an unexpected keyword argument 'verbose'", "evidence": [], "confidence": 0.0, "tool_sequence": [], "category_identified": null}, "final_state": {"pending_doc_ids": [], "processed_doc_ids": [], "current_confidence": 0.0, "evidence_collected": [], "tool_sequence": [], "category_id": null, "last_query": "What was Microsoft's cloud strategy in Q3 2020?", "last_error": "Agent execution failed: create_react_agent() got an unexpected keyword argument 'verbose'"}}
2025-04-28 09:16:35,393 - __main__ - INFO - Agent execution completed.
2025-04-28 09:16:35,394 - __main__ - INFO - Saved agent response to: /Users/saadahmed/Desktop/Apps/BussGPT/scripts/agent_tests/../../test_results/run_20250428_091632_abc5a0b3/response.txt
